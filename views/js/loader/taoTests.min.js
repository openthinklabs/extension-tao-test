define("taoTests/controller/routes",[],function(){"use strict";return{Tests:{deps:"controller/tests/action",actions:{editTest:"controller/tests/editTest"}},TestImport:{actions:{index:"controller/testImport/index"}}}}),define("taoTests/util/provider/itemClassProvider",["jquery","i18n","util/url"],function($,__,urlUtils){"use strict";var providers={listTests(data){return new Promise(function(resolve,reject){$.ajax({url:urlUtils.route("getItemClasses","SaSItems","taoItems"),data:{q:data.q,page:data.page},type:"GET",dataType:"JSON"}).done(function(tests){tests?resolve(tests):reject(new Error(__("Unable to load tests")))}).fail(function(){reject(new Error(__("Unable to load tests")))})})}};return providers}),define("taoTests/util/form/itemClassSelectorForm",["jquery","i18n","ui/filter","ui/feedback"],function($,__,filterFactory,feedback){"use strict";return{createSelectorInput(_ref){let{$filterContainer,$inputElement,dataProvider,inputPlaceholder=__("Select the item destination class"),inputLabel=__("Select Item Destination")}=_ref;return filterFactory($filterContainer,{placeholder:inputPlaceholder,label:inputLabel,width:"64%",quietMillis:1e3}).on("change",function(selection){$inputElement.val(selection)}).on("request",function(params){dataProvider.list(params.data).then(function(data){params.success(data)}).catch(function(err){params.error(err),feedback().error(err)})}).render("<%- text %>")},setupTaoLocalForm($form,providers){const $filterContainer=$(".item-select-container",$form),$inputElement=$("#itemClassDestination",$form);this.createSelectorInput({$filterContainer,$inputElement,dataProvider:{list:providers.listTests}})}}}),define("taoTests/controller/testImport/index",["jquery","taoTests/util/provider/itemClassProvider","taoTests/util/form/itemClassSelectorForm"],function($,itemClassProvider,itemClassSelectorForm){"use strict";return{start(){const $form=$("#import");itemClassSelectorForm.setupTaoLocalForm($form,itemClassProvider)}}}),define("taoTests/previewer/factory",["lodash","context","module","core/providerLoader","core/providerRegistry","core/logger"],function(_,context,module,providerLoaderFactory,providerRegistry){"use strict";function previewerFactory(type,uri,config){return config=Object.assign({},module.config(),config),providerLoaderFactory().addList(config.previewers).load(context.bundle).then(function(providers){providers.forEach(function(provider){previewerFactory.registerProvider(provider.name,provider)})}).then(function(){return previewerFactory.getProvider(type)}).then(function(provider){return provider.init(uri,config)})}return providerRegistry(previewerFactory,function validateProvider(provider){if("function"!=typeof provider.init)throw new TypeError("The previewer provider MUST have a init() method");return!0})}),define("taoTests/controller/tests/action",["i18n","module","uri","layout/actions","layout/actions/binder","layout/section","form/translation","services/translation","ui/feedback","core/logger","taoTests/previewer/factory"],function(__,module,uri,actionManager,binder,section,translationFormFactory,translationService,feedback,loggerFactory,previewerFactory){"use strict";const logger=loggerFactory("taoTests/controller/action");binder.register("translateTest",function(actionContext){section.current().updateContentBlock("<div class=\"main-container flex-container-full\"></div>");const $container=$(".main-container",section.selected.panel),{rootClassUri,id:resourceUri}=actionContext;translationFormFactory($container,{rootClassUri,resourceUri,allowDeletion:!0}).on("edit",(id,language)=>actionManager.exec("test-authoring",{id,language,rootClassUri,originResourceUri:resourceUri,translation:!0,actionParams:["originResourceUri","language","translation"]})).on("delete",function onDelete(id,language){return translationService.deleteTranslation(resourceUri,language).then(()=>(feedback().success(__("Translation deleted")),this.refresh()))}).on("error",error=>{logger.error(error),feedback().error(__("An error occurred while processing your request."))})}),binder.register("testPreview",function testPreview(actionContext){const config=module.config(),previewerConfig=Object.fromEntries(Object.entries({readOnly:!1,fullPage:!0,pluginsOptions:config.pluginsOptions}).filter(_ref2=>{let[key,value]=_ref2;return value!==void 0})),getProvider=id=>{if(!id||!config.providers)return config.provider;const previewerId=parseInt(`${id}`.split("-").pop(),10)||0;return config.providers[previewerId]?config.providers[previewerId].id:config.provider};previewerFactory(getProvider(this.id)||"qtiTest",uri.decode(actionContext.uri),previewerConfig).catch(err=>{logger.error(err),feedback().error(__("Test Preview is not installed, please contact to your administrator."))})})}),define("taoTests/controller/tests/editTest",["jquery","ui/lock","module","layout/actions"],function($,lock,module,actions){"use strict";return{start(){const config=module.config(),maxButtons=10,getPreviewId=idx=>`test-preview${idx?`-${idx}`:""}`,previewActions=[];for(let i=0;i<maxButtons;i++){const action=actions.getBy(getPreviewId(i));if(!action)break;previewActions.push(action)}previewActions.forEach(previewAction=>{previewAction.state.disabled=!config.isPreviewEnabled}),actions.updateState(),$("#lock-box").each(function(){lock($(this)).register()})}}}),define("taoTests/loader/taoTests.bundle",function(){}),define("taoTests/loader/taoTests.min",["taoItems/loader/taoItems.min"],function(){});
//# sourceMappingURL=taoTests.min.js.map